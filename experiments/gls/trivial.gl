%% simple.pl
%% simple sdcl for English
%% ----------------------------------------------------------------------


num_preds(1, 4).

pred(Type, Index, Pred) :-
        num_preds(Type, N), 
        between(1, N, Index),
        format(atom(Pred), "A(t=~w, i=~w)", [Type, Index]).

pred(Type, Pred) :- pred(Type, _, Pred).

preds(Type, As) :- maplist(call(pred, Type), As).


lexemes([a,b]).
lexeme(L) :-
        lexemes(Ls), 
        member(L, Ls).


:- begin(genlog).

rule_group(
           macro(
                 (s(X) ---> '?A'(X)),
                 (preds(1, ['?A']))
                )
          ).

rule_group(
           macro(
                 ('?A'(XY) ---> append1d(X, Y, XY) # '?B'(X), '?C'(Y)),
                 preds(1, ['?A', '?B', '?C'])
                ),
           macro(
                 ('?A'(X) ---> true)
                ,
                 (pred(1, '?A'),
                  lexeme(L),
                  X = [L]
                 )
                )
          ).

:- end(genlog).
