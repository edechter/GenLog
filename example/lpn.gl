

:- ['../src/number_words.pl'].

number_lexicon(L) :-
        findall(W,
               (between(1, 10, N),
                number_word(N, Xs),
                member(W, Xs)),
                Ws),
        sort(Ws, L).

number_lex(W) :-
        number_lexicon(L),
        member(W, L).
                
pred(Pred) :-
        between(1, 2, N),
        atom_number(A, N),
        atomic_list_concat(['A', A], Pred).



:- begin(genlog).

macro(
      ( hear(Xi-Xf | Z) ---> '?A'(Xi-Xm | Z), hear(Xm-Xf | Xi-Xm) )
     :-
     pred('?A')
     ).
hear(X-X|Z).

macro(
      ( '?A'(Xi-Xf | Z) ---> '?B'(Xi-Xm | Z), '?C'(Xm-Xf | Xi-Xm) )
     :-
     (pred('?A'),
      pred('?B'),
      pred('?C'))
     ).

macro(
      ( '?A'(A-X | B-Y))
     :-
      (pred('?A'),
      (A=[N1|X],
      number_lex(N1)
      ;
       A=X),
      
      (B=[N2|Y],
      number_lex(N2)
      ;
       B=Y)
      )
     ).
 


:- end(genlog).
